name: Lean Build Check

on:
  push:
    branches: [ main, master ]
    paths:
      - '**'
  pull_request:
    branches: [ main, master ]
    paths:
      - '**'
  workflow_dispatch:

jobs:
  find-projects:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.find.outputs.projects }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Find Lean projects
      id: find
      run: |
        if [ ! -d "lean" ]; then
          echo "lean/ directory not found"
          echo "projects=" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        # Find all directories in lean/ that contain a lakefile.toml
        projects=$(find lean -name "lakefile.toml" -exec dirname {} \; | sort)
        
        if [ -z "$projects" ]; then
          echo "No Lean projects found in lean/ directory"
          echo "projects=" >> $GITHUB_OUTPUT
        else
          echo "Found Lean projects:"
          echo "$projects"
          # Store projects as a newline-separated string
          echo "projects<<EOF" >> $GITHUB_OUTPUT
          echo "$projects" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        fi

  build-projects:
    needs: find-projects
    if: needs.find-projects.outputs.projects != ''
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Build all Lean projects
      run: |
        echo "${{ needs.find-projects.outputs.projects }}" | while read project; do
          if [ -n "$project" ]; then
            echo "Building Lean project: $project"
            cd "$project"
            
            # Use the official Lean action approach by running lake commands directly
            # First, set up the environment similar to what lean-action does
            curl -L https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- -y
            source $HOME/.elan/env
            
            # Update lake dependencies
            lake update
            
            # Build the project
            lake build
            
            if [ $? -eq 0 ]; then
              echo "✅ Successfully built $project"
            else
              echo "❌ Failed to build $project"
              exit 1
            fi
            echo ""
            cd - > /dev/null
          fi
        done
